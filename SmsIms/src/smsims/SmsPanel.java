/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package smsims;

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.comm.CommDriver;
import smsCore.GSMConnect;
import smsims.om.MessageResult;
import smsCore.MessageSeperator;
import smsims.db.DbOperation;

/**
 *
 * @author Lasith.Chandrasekara
 */
public class SmsPanel extends javax.swing.JPanel {

    /**
     * Creates new form SmsPanel
     */
    public SmsPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        smsText = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jc_department = new javax.swing.JComboBox();
        jc_site = new javax.swing.JComboBox();
        jb_send = new javax.swing.JButton();
        jb_clear = new javax.swing.JButton();
        jcb_responce_required = new javax.swing.JCheckBox();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        jc_mgtLevel = new javax.swing.JComboBox();

        smsText.setColumns(20);
        smsText.setRows(5);
        jScrollPane1.setViewportView(smsText);

        jLabel1.setText("Message");

        jLabel2.setText("Department");

        jLabel3.setText("Site");

        jc_department.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All Departments", "Geo-Cycle", "HR" }));

        jc_site.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All Sites", "CMB", "Galle" }));

        jb_send.setText("Send SMS");
        jb_send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_sendActionPerformed(evt);
            }
        });

        jb_clear.setText("Clear");

        jcb_responce_required.setText("Require Response");

        jLabel4.setText("Mgt Level");

        jc_mgtLevel.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All Levels", "FML", "SML", "TML" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jcb_responce_required)
                            .addComponent(jc_site, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 465, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jc_department, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel4))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jb_send)
                                        .addGap(57, 57, 57)
                                        .addComponent(jb_clear)))
                                .addGap(36, 36, 36)
                                .addComponent(jc_mgtLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 86, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel1))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jc_department, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jc_mgtLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jc_site, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addComponent(jcb_responce_required)
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jb_send)
                    .addComponent(jb_clear))
                .addContainerGap(93, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jb_sendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_sendActionPerformed
        //log creating part....
        try 
        {
            DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd_HH-mm-ss");
            Calendar cal = Calendar.getInstance();
            BufferedWriter out = new BufferedWriter(new FileWriter("logs\\smslog--" + dateFormat.format(cal.getTime()) + ".txt"));
//            out.write("--------------------------------------------------------------Date and Time(" + dateFormat.format(cal.getTime()) + ") --------------------------------------------------------------");
//            out.newLine();
//            out.newLine();
//            out.newLine();
//            out.newLine();
        } 
        catch (Exception e) 
        {
            e.printStackTrace();
            System.out.println("Cannot find the log file location");
        }

        sendSms();
        
        readSms();
    }//GEN-LAST:event_jb_sendActionPerformed
    
    private void sendSms() {
                //sms sending part...
        try 
        {
            String smsMessage = smsText.getText();
            String[] phoneNumbers = {"+94719028959", "+94712638139","+94788370502"};
            
            GSMConnect gsm = GSMConnect.getInstace();
            gsm.checkStatus();
            Thread.sleep(50000);
            gsm.sendMessage();
            Thread.sleep(50000);
            for (String phoneNo : phoneNumbers)
            {
                if (smsMessage.length()<=155)
                {
                    gsm.sendPhoneNu(phoneNo);
                    gsm.sendString(smsMessage);
                    Thread.sleep(3000);
                }
                else if (smsMessage.length()>=156 && smsMessage.length()<=310)
                {
                    String messag1 = smsMessage.substring(0, 155);
                    String messag2 = smsMessage.substring(156);
                    gsm.sendPhoneNu(phoneNo);
                    gsm.sendString(messag1);
                    Thread.sleep(3000);
                    gsm.sendPhoneNu(phoneNo);
                    gsm.sendString(messag2);
                    Thread.sleep(3000);
                }
                else
                {
                    String messag1 = smsMessage.substring(0, 155);
                    String messag2 = smsMessage.substring(156,310);
                    String message3 = smsMessage.substring(311);
                    gsm.sendPhoneNu(phoneNo);
                    gsm.sendString(messag1);
                    Thread.sleep(3000);
                    gsm.sendPhoneNu(phoneNo);
                    gsm.sendString(messag2);
                    Thread.sleep(3000);
                    gsm.sendPhoneNu(phoneNo);
                    gsm.sendString(message3);
                    Thread.sleep(3000);
                }
            }
            
            Thread.sleep(50000);
            gsm.hangup();
        } 
        catch (Exception e) 
        {
            e.printStackTrace();
        }
    }
    
    private void readSms() {
        DbOperation dbOperation = new DbOperation();
        
        //sms reading part...
        try
        {
            GSMConnect gsm = GSMConnect.getInstace();
            gsm.checkStatus();
            Thread.sleep(50000);
            gsm.sendMessage();
            Thread.sleep(50000);
            gsm.selecttheMemory();
            Thread.sleep(50000); 
            while(true)
            {
                //TODO how much time we shoud run
                String tempString = gsm.getoutputString().toString();
                gsm.listSmsFromMemory();
                Thread.sleep(20000);
                String afterReadingSms = gsm.getoutputString().toString();
                String allMessageString = afterReadingSms.substring(tempString.length());
                MessageSeperator me = new MessageSeperator(allMessageString) ;
                List<MessageResult> messageResultList = me.getSeperatedMessage();
                
                //TODO save messageResultList in db
                for (MessageResult messageResult : messageResultList)
                {
                    //Save in the db
                    dbOperation.insertMessageResult(messageResult);
                    
                    System.out.println(messageResult.toString());
                }
                for (MessageResult messageResult : messageResultList)
                {
                    gsm.deleteASMS(messageResult.getIndex());
                }
            }

            } catch (Exception e) {
                e.printStackTrace();
                
            }   
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton jb_clear;
    private javax.swing.JButton jb_send;
    private javax.swing.JComboBox jc_department;
    private javax.swing.JComboBox jc_mgtLevel;
    private javax.swing.JComboBox jc_site;
    private javax.swing.JCheckBox jcb_responce_required;
    private javax.swing.JTextArea smsText;
    // End of variables declaration//GEN-END:variables
}
